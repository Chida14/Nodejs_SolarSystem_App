name: Deployment - Reusable Workflow

on: 
    workflow_call: 

jobs:
    reuse-deploy:
        runs-on: ubuntu-latest
        environment: 
            name: development
            url: https://${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        outputs:
            APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Install Kubectl CLI
              uses: azure/setup-kubectl@v4
              with:
                version: 'v1.26.0'  #default is latest stable

            - name: Set Kubeconfig File
              uses: azure/k8s-set-context@v4
              with:
                method: kubeconfig
                kubeconfig: ${{ secrets.KUBECONFIG }}
                #context: <context name> # current-context from kubeconfig is used as default

            - name: Fetch K8s Cluster details
              run: |
                kubectl version --short
                echo -------------------------------------------------------
                kubectl get nodes

            - name: Save Ingress Nginx Controller IP as a GITHUB Environment Variable #with in the same job or between steps of a job
              run: |
                echo "INGRESS_IP=$(kubectl -n ${{ vars.NAMESPACE }} get service ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> $GITHUB_ENV
        
            - name: Replace Token in Manifest files
              uses: cschleiden/replace-tokens@v1
              with:
                tokenPrefix: '{'
                tokenSuffix: '}'
                files: '["kubernetes/development/*.yaml"]'
              env:
                NAMESPACE: ${{ vars.NAMESPACE }}
                REPLICAS: ${{ vars.REPLICAS }}
                K8S_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
                INGRESS_IP: ${{ env.INGRESS_IP }}

            - name: Check Files
              run: |
                cat kubernetes/development/*.yaml

            - name: Create MongoDB Secret
              run: |
                kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
                --from-literal=MONGO_URI=${{ env.MONGO_URI }} \
                --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
                --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
                --save-config \
                --dry-run=client \
                -o yaml | kubectl apply -f -
                
            - name: Deploy to Dev Env
              run: |
                kubectl apply -f kubernetes/development/

            - name: Set App Ingress Host URl
              id: set-ingress-host-address
              run: |
                echo "APP_INGRESS_HOST=$(kubectl get -n ${{ vars.NAMESPACE }} ingress -o jsonpath="{.items[0].spec.tls[0].hosts[0]}")" >> $GITHUB_OUTPUT

        